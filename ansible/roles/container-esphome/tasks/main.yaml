- name: "Create {{ container_name }} config dir"
  become: true
  ansible.builtin.file:
    path: "{{ container_config_dir }}/{{ container_name }}"
    state: directory
    mode: 0774
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: true

- name: "Create compose config dir"
  ansible.builtin.file:
    path: "{{ compose_config_dir }}/{{ container_name }}"
    state: directory

- name: "Create compose file"
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ compose_config_dir }}/{{ container_name }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create and start services
  community.docker.docker_compose:
    project_src: "{{ compose_config_dir }}/{{ container_name }}"
  register: compose_output

- ansible.builtin.debug:
    var: compose_output

# - name: "Ensure {{ container_name }} container exists"
#   community.docker.docker_container:
#     name: "{{ container_name }}"
#     image: "{{ container_image }}"
#     state: started
#     privileged: true
#     restart_policy: unless-stopped
#     # user: "{{ container_user_id }}:{{ container_user_id }}"
#     ports:
#       - "6056:6052"
#       - "6126:6123"
#     devices:
#       - /dev/ttyUSB0
#     env:
#       TZ: "Berlin/Europe"
#       ESPHOME_DASHBOARD_USE_PING: "true"
#     volumes:
#       - "{{ container_config_dir }}/{{ container_name }}:/config"
#       - /etc/localtime:/etc/localtime:ro
#     # networks:
# #       - name: "affordablepotatoes"
#     labels:
#       traefik.enable: "true"
#       # Routing for HTTP
#       traefik.http.routers.esphome.rule: "Host(`esphome.affordablepotatoes.com`)"
#       traefik.http.routers.esphome.entrypoints: "web"
#       # traefik.http.services.esphome.loadbalancer.server.port: "6052"
#       # Routing for HTTPS
#       traefik.http.routers.esphome-https.service: "esphome"
#       traefik.http.routers.esphome-https.entrypoints: "websecure"
#       traefik.http.routers.esphome-https.rule: "Host(`esphome.affordablepotatoes.com`)"
#       traefik.http.routers.esphome-https.tls: "true"
#       traefik.http.routers.esphome-https.tls.certresolver: "myresolver"
