# NOTE
# This assumes that the node has already been initialsed by a remote Ansible connection.
#Â This WILL NOT bootstrap installation on a node via localhost. 
# But, once an initial run of Anisble has been completed, this role will install requirements
# and set up ansible-pull.

- name: Make project in /opt/ansible
  become: true
  ansible.builtin.file:
    state: directory
    path: /opt/ansible
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0744

- name: Clone initial copy of repo
  ansible.builtin.git:
    repo: https://github.com/whalecoiner/home.git
    dest: "/opt/ansible/home.git"
    clone: true
    update: true

- name: Stat installed.lock
  ansible.builtin.stat:
    path: /opt/ansible/home.git/.installed.lock
  register: installlock_raw

- name: Register installation var
  ansible.builtin.set_fact:
    installed: "{{ installlock_raw.stat.exists }}"

# - name: debug
#   ansible.builtin.debug:
#     msg: "{{ installed }}"

- name: Run initial requirements install
  ansible.builtin.command: ansible-galaxy install -f -r ansible/meta/requirements.yaml
  timeout: 1200
  args:
    chdir: /opt/ansible/home.git
  when: not installed

- name: Mark initial install as completed
  ansible.builtin.file:
    state: touch
    path: /opt/ansible/home.git/.installed.lock
  when: not installed

- name: Cron to run ansible-galaxy update weekly
  ansible.builtin.cron:
    name: "ansible-galaxy"
    job: "TZ=UTC ansible-galaxy install -f -r ansible/roles/requirements.yaml"
    state: present
    minute: "17" 
    hour: "5"
    day: "1"

- name: Cron to run ansible-pull frequently
  ansible.builtin.cron:
    name: "ansible-pull"
    job: "TZ=UTC ansible-pull-full.sh"
    state: present
    minute: "{{ ansiblepull_cron_minute }}"
    hour: "{{ ansiblepull_cron_hour }}"
