#!/bin/bash
# Auto suspend and wake-up script 
# via https://github.com/juliusberner/homeserver/blob/81ec245c501bea5ecce5cdb3b7b93e8957e1f95c/ansible/roles/common/files/suspend_until.sh
# see https://askubuntu.com/questions/61708/automatically-sleep-and-wake-up-at-specific-times
#
# Example:
# sleepuntil -T 9:30
# sleepuntil -T 18:45
# sleepuntil -H 9

#################################
# Constants / global variables
#################################

WAKETIME="18:00"
WAKEHOURS=3

# Help output
function usage {
  echo
  echo "This is a Bash script that suspends the machine for a given number of hours or an exact time."
  echo "Example: ./sleepuntil.sh -T 18:45 "
  echo "Example: ./sleepuntil.sh -H 9"
  echo " "
  echo "Options"
  echo "-T | --time "
  echo "                   The time to wake up."
  echo " "
  echo "-H | --hours"
  echo "                   Wake up in this many hours."
  echo " "
}

# Get input parameters
while [[ "$1" != "" ]]; do
  case $1 in
      -T | --time )   shift
                      WAKETIME=$1
                      ;;
      -H | --hours )  shift
                      WAKEHOURS=$1
                      ;;
      -h | --help )   usage
                      exit
                      ;;
      * )             usage
                      exit 1
  esac
  shift
done



#################################
# Main
#################################

# ------------------------------------------------------
# suspend option (see "man rtcwake")
MODE={{ sleepuntil_suspend_mode }}

# check whether specified time is today or tomorrow
DESIRED=$((`date +%s -d "$1"`))
NOW=$((`date +%s`))
if [ $DESIRED -lt $NOW ]; then
  DESIRED=$((`date +%s -d "$1"` + 24*60*60))
fi

# kill already running rtcwake
sudo killall rtcwake

# set wakeup time
sudo rtcwake -l -m $MODE -t $DESIRED &
# use "no" here to only set wakeup time

# feedback
echo "Suspending..."

# give rtcwake some time to make its stuff
sleep 2

# any commands you want to launch after wakeup can be placed here (note that sudo may have expired)

# wake up with monitor enabled (N.B. change "on" for "off" if the monitor should be be disabled on wake)
# xset dpms force on

echo "Waking up..."

# remove this and move to systemd service
# {{ sleepuntil_wakeup_script }}
