- name: Check for autorestic installation
  ansible.builtin.command: which autorestic
  register: autorestic_installation_status
  changed_when: false
  failed_when: false

- name: Download autorestic installer
  ansible.builtin.get_url:
    url: "{{ autorestic_installer_url }}"
    dest: "{{ autorestic_temp_path }}/autorestic.sh"
    mode: 0744
  when: autorestic_installation_status.rc != 0

- name: Run autorestic installer
  become: true
  ansible.builtin.command: "{{ autorestic_temp_path }}/autorestic.sh"
  when: autorestic_installation_status.rc != 0

- name: Remove autorestic installer
  ansible.builtin.file:
    path: "{{ autorestic_temp_path }}/autorestic.sh"
    state: absent
  when: autorestic_installation_status.rc != 0

- name: "Copy config file to {{ autorestic_config_path }}"
  become: true
  ansible.builtin.template:
    src: autorestic.yaml.j2
    dest: "{{ autorestic_config_path }}/.autorestic.yaml"
    owner: "{{ autorestic_owner }}"
    group: "{{ autorestic_group }}"
    mode: 0755

- name: "Copy cron script {{ autorestic_cron_script_path }}"
  become: true
  ansible.builtin.template:
    src: autorestic-cron.sh.j2
    dest: "{{ autorestic_cron_script_path }}/autorestic-cron.sh"
    owner: "{{ autorestic_owner }}"
    group: "{{ autorestic_group }}"
    mode: 0755

- name: Attempt to initialise Autorestic
  block:
    - name: Autorestic initialise
      ansible.builtin.command: "autorestic check"
  rescue:
    - name: Debug Autorestic initialisation
      ansible.builtin.debug:
        msg: "Could not initialise Autorestic. Non-fatal. Proceeding."

# This cron is frequent because the called script handles timing of backups
- name: Ensure autorestic cron exists
  ansible.builtin.cron:
    name: "Autorestic"
    minute: "{{ autorestic_cron_minute }}"
    hour: "{{ autorestic_cron_hour }}"
    day: "{{ autorestic_cron_day }}"
    weekday: "{{ autorestic_cron_weekday }}"
    month: "{{ autorestic_cron_month }}"
    job: "{{ autorestic_cron_script_path }}/autorestic-cron.sh"
    state: present
