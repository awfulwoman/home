---
- name: Install ZFS backup tooling
  become: true
  ansible.builtin.apt:
    name: 
      - moreutils # for ts (timestamp) util
      - lzop
      - mbuffer
    state: present

- name: Read backup server public key
  become: true
  ansible.builtin.slurp:
    src: $HOME/.ssh/id_ed25519.pub
  register: slurpfile

- name: Publish backup server public key as fact
  ansible.builtin.set_fact:
    public_key: "{{ slurpfile['content'] | b64decode }}"

- name: Ensure backups pool exists
  become: true
  community.general.zfs:
    name: backups
    state: present

- name: Create backups/slowpool dataset
  become: true
  community.general.zfs:
    name: backups/slowpool
    state: present
    extra_zfs_properties:
      acltype: posix
      xattr: sa
      # mountpoint: none

- name: Create backups/fastpool dataset
  become: true
  community.general.zfs:
    name: backups/fastpool
    state: present
    extra_zfs_properties:
      acltype: posix
      xattr: sa
      # mountpoint: none

- name: "Ensure /backuppool mountpoint is owned by {{ansible_user}}"
  become: true
  ansible.builtin.file:
    path: /backups
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    state: directory
    mode: 0774
    recurse: yes

- name: Generate and deploy backup script
  become: true
  ansible.builtin.template:
    src: templates/backup.sh.j2
    dest: /usr/local/sbin/backup.sh
    owner: root
    group: root
    mode: '0774'
  when: backup_datasets

- name: Cron to run backup.sh
  become: true
  ansible.builtin.cron:
    name: "backup.sh"
    special_time: reboot
    job: TZ=UTC /usr/local/sbin/backup.sh
    state: present
  when: backup_datasets
