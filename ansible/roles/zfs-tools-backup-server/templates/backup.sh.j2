#!/usr/bin/env bash

sleep 60

LOGGING_DIR=/var/log/backups
LOGGING_FILE=backups.log
ERROR_FILE=error.log
# BACKUP_ADDRESS=10.8.0.116
BACKUP_ADDRESS=host-storage.i.affordablepotatoes.com
FAILURE=0

mkdir -p $LOGGING_DIR
touch $LOGGING_DIR/$LOGGING_FILE

# Is the backup host up?
ping $BACKUP_ADDRESS -c2 > /dev/null 2>&1

if [ $? -eq 0 ]; 
then 
  echo $BACKUP_ADDRESS online. Proceeding.
else 
  echo $BACKUP_ADDRESS offline. Failure.
  exit 1 
fi 

echo "[$(date --iso-8601=seconds)] Started backup run" >> $LOGGING_DIR/$LOGGING_FILE

# /usr/bin/curl -s --form-string token="{{vault_pushover_home_automation_key}}" --form-string user="{{vault_pushover_user_key}}" --form-string message="{{inventory_hostname}} backup started - $(date --iso-8601=seconds)" https://api.pushover.net/1/messages.json

{% for item in zfs_backup_datasets %}
echo "[$(date --iso-8601=seconds)] START {{item}} " >> $LOGGING_DIR/$LOGGING_FILE
SYNCOID_OUTPUT=$( /usr/sbin/syncoid --sendoptions=Rw --no-privilege-elevation --no-sync-snap --quiet zfsbackup@$BACKUP_ADDRESS:{{item}} backups/{{item}} 2>&1 )

if [ $? -eq 0 ]
then
    echo "[$(date --iso-8601=seconds)] SUCCESS {{item}}" >> $LOGGING_DIR/$LOGGING_FILE
		echo "Successfully backed up {{item}}"
else
    FAILURE=1
    echo "[$(date --iso-8601=seconds)] FAILURE {{item}} " >> $LOGGING_DIR/$LOGGING_FILE
    echo "[$(date --iso-8601=seconds)] FAILURE {{item}} " >> $LOGGING_DIR/$ERROR_FILE
    echo "[$(date --iso-8601=seconds)] FAILURE OUTPUT: " >> $LOGGING_DIR/$ERROR_FILE
    echo $SYNCOID_OUTPUT >> $LOGGING_DIR/$ERROR_FILE
		echo $SYNCOID_OUTPUT
fi
echo "[$(date --iso-8601=seconds)] END {{item}} " >> $LOGGING_DIR/$LOGGING_FILE
{% endfor %}

echo "[$(date --iso-8601=seconds)] Finished backup run" >> $LOGGING_DIR/$LOGGING_FILE
echo " " >> $LOGGING_DIR/$LOGGING_FILE
echo "---------------------" >> $LOGGING_DIR/$LOGGING_FILE
echo " " >> $LOGGING_DIR/$LOGGING_FILE

# Notify of outcome
if [ $FAILURE -eq 1 ]
then
    echo "Backup failure - logged to $LOGGING_DIR/$ERROR_FILE"
    # /usr/bin/beep -f 5000 -l 50 -r 6
    /usr/bin/curl -s --form-string token="{{vault_pushover_home_automation_key}}" --form-string user="{{vault_pushover_user_key}}" --form-string message="Backup failed - $(date --iso-8601=seconds)" https://api.pushover.net/1/messages.json
else
    echo "Backup success"
    echo "Going to sleep..."
		beep -f 130 -l 100 -n -f 262 -l 100 -n -f 330 -l 100 -n -f 392 -l 100 -n -f 523 -l 100 -n -f 660 -l 100 -n -f 784 -l 300 -n -f 660 -l 300 -n -f 146 -l 100 -n -f 262 -l 100 -n -f 311 -l 100 -n -f 415 -l 100 -n -f 523 -l 100 -n -f 622 -l 100 -n -f 831 -l 300 -n -f 622 -l 300 -n -f 155 -l 100 -n -f 294 -l 100 -n -f 349 -l 100 -n -f 466 -l 100 -n -f 588 -l 100 -n -f 699 -l 100 -n -f 933 -l 300 -n -f 933 -l 100 -n -f 933 -l 100 -n -f 933 -l 100 -n -f 1047 -l 400
    rtcwake -m mem -l -t $(date --date "tomorrow 08:50" +%s)
fi
