# code: language=ansible
name: "{{ project_name }}"
services:
  reverseproxy:
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    image: traefik:v2.11
    restart: unless-stopped
    env_file: .env
    labels:
      # Traefik-ception so that Traefik is provided via Traefik
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.backend=traefik"
      # Allow dashboard access via traefik.{{ansible_hostname}}.{{ domain_name }}
      - "traefik.http.routers.dashboard.rule=Host(`traefik.{{ansible_hostname}}.{{ domain_name }}`)"
      - "traefik.http.routers.dashboard.service=dashboard@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      # Allow API access via traefik.{{ansible_hostname}}.{{ domain_name }}
      - "traefik.http.routers.api.rule=Host(`traefik.{{ansible_hostname}}.{{ domain_name }}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    volumes:
      - "{{ project_config }}/providers:/etc/traefik/providers"
      - "{{ project_config }}/traefik.yaml:/etc/traefik/traefik.yaml"
      - "{{ project_config }}/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - /etc/localtime:/etc/localtime:ro

  whoami:
    container_name: whoami
    ports:
      - "8888:80"
    environment:
      - "TZ=${TZ}"
    image: traefik/whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.{{ ansible_host }}.{{ domain_name }}`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"
      # - "homepage.group=GROUP"
      # - "homepage.name=SUBDOMAIN"
      # - "homepage.href=https://SUBDOMAIN.{{ domain_name }}"
      # - "homepage.description=whatever"
    volumes:
      - /etc/localtime:/etc/localtime:ro
